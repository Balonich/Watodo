// <auto-generated />
using System;
using Backend.Domain.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace WatodoAPI.Domain.Database.Migrations
{
    [DbContext(typeof(WatodoDbContext))]
    partial class WatodoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("Backend.Domain.Database.SqlModels.TodoSqlModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Completed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Todos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cea6f34e-26f5-4ae4-b5d5-4a1c4872daa2"),
                            Completed = false,
                            Title = "First Todo",
                            UserId = new Guid("cdf444a0-841f-441e-981e-c3f3543ca1d1")
                        },
                        new
                        {
                            Id = new Guid("0fc7523e-ec4b-455b-a7d7-b7e9441bc858"),
                            Completed = true,
                            Title = "Second Todo",
                            UserId = new Guid("cdf444a0-841f-441e-981e-c3f3543ca1d1")
                        });
                });

            modelBuilder.Entity("Backend.Domain.Database.SqlModels.UserSqlModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cdf444a0-841f-441e-981e-c3f3543ca1d1"),
                            Email = "balonich@gmail.com",
                            Password = "password",
                            Username = "balonich"
                        });
                });

            modelBuilder.Entity("Backend.Domain.Database.SqlModels.TodoSqlModel", b =>
                {
                    b.HasOne("Backend.Domain.Database.SqlModels.UserSqlModel", "User")
                        .WithMany("Todos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Backend.Domain.Database.SqlModels.UserSqlModel", b =>
                {
                    b.Navigation("Todos");
                });
#pragma warning restore 612, 618
        }
    }
}
